{
	"info": {
		"_postman_id": "e2c15c52-bef6-4885-a522-0d1f257f3124",
		"name": "REQRES",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "34774038"
	},
	"item": [
		{
			"name": "GET",
			"item": [
				{
					"name": "GetAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response has valid JSON structure\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"\r",
									"    jsonData.data.forEach(function(user) {\r",
									"        pm.expect(user).to.have.property(\"id\").that.is.a(\"number\");\r",
									"        pm.expect(user).to.have.property(\"email\").that.is.a(\"string\").and.match(/.+@.+\\..+/);\r",
									"        pm.expect(user).to.have.property(\"first_name\").that.is.a(\"string\");\r",
									"        pm.expect(user).to.have.property(\"last_name\").that.is.a(\"string\");\r",
									"        pm.expect(user).to.have.property(\"avatar\").that.is.a(\"string\").and.match(/^https?:\\/\\/.+\\.(jpg|jpeg|png|gif)$/);\r",
									"    });\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}users?page=2",
							"host": [
								"{{URL}}users"
							],
							"query": [
								{
									"key": "page",
									"value": "2"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "POST",
			"item": [
				{
					"name": "CreateUser",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
									"});\r",
									"\r",
									"pm.test(\"Response has valid JSON structure\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    \r",
									"    pm.expect(jsonData).to.have.property(\"name\");\r",
									"    pm.expect(jsonData).to.have.property(\"job\");\r",
									"    pm.expect(jsonData).to.have.property(\"id\");\r",
									"    pm.expect(jsonData).to.have.property(\"createdAt\"); \r",
									"    pm.expect(jsonData.name).to.eql(\"Sr Vitinho\");\r",
									"    pm.expect(jsonData.job).to.eql(\"monitor\");\r",
									"    \r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Sr Vitinho\",\r\n    \"job\": \"monitor\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}users",
							"host": [
								"{{URL}}users"
							]
						}
					},
					"response": []
				},
				{
					"name": "PostRequestSuccessful",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response has valid JSON structure\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    \r",
									"    pm.expect(jsonData).to.have.property(\"token\");\r",
									"    pm.expect(jsonData).to.have.property(\"id\");\r",
									"   \r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"eve.holt@reqres.in\",\r\n    \"password\": \"pistol\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}register",
							"host": [
								"{{URL}}register"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "PUT",
			"item": [
				{
					"name": "UpdateUser",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response has valid JSON structure\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"\r",
									"    pm.expect(jsonData).to.have.property(\"name\", \"Vitor San\");\r",
									"    pm.expect(jsonData).to.have.property(\"job\", \"Leiteiro\");\r",
									"    pm.expect(jsonData).to.have.property(\"updatedAt\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Vitor San\",\r\n    \"job\": \"Leiteiro\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}users/87",
							"host": [
								"{{URL}}users"
							],
							"path": [
								"87"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "DELETE",
			"item": [
				{
					"name": "deleteUser",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}users/76",
							"host": [
								"{{URL}}users"
							],
							"path": [
								"76"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	]
}