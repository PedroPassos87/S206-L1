{
	"info": {
		"_postman_id": "f0afe18c-bb73-4e3d-ab4a-7750f568c017",
		"name": "Prova- postman",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "34774038"
	},
	"item": [
		{
			"name": "Pokemon inexistente",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://pokeapi.co/api/v2/pokemon/MaxBody",
					"protocol": "https",
					"host": [
						"pokeapi",
						"co"
					],
					"path": [
						"api",
						"v2",
						"pokemon",
						"MaxBody"
					]
				}
			},
			"response": []
		},
		{
			"name": "Procurando e Validando skills Pikachu",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Verificar habilidades de Pikachu\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    var abilities = jsonData.abilities;\r",
							"\r",
							"    // Habilidades esperadas\r",
							"    var expectedAbilities = ['static', 'lightning-rod'];\r",
							"\r",
							"    var abilityNames = abilities.map(function (ability) {\r",
							"        return ability.ability.name;\r",
							"    });\r",
							"\r",
							"    expectedAbilities.forEach(function (ability) {\r",
							"        pm.expect(abilityNames).to.include(ability);\r",
							"    });\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://pokeapi.co/api/v2/pokemon/pikachu",
					"protocol": "https",
					"host": [
						"pokeapi",
						"co"
					],
					"path": [
						"api",
						"v2",
						"pokemon",
						"pikachu"
					]
				}
			},
			"response": []
		},
		{
			"name": "criando objeto",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response has valid JSON structure\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    \r",
							"    pm.expect(jsonData).to.have.property(\"id\");\r",
							"    pm.expect(jsonData).to.have.property(\"name\");\r",
							"    pm.expect(jsonData).to.have.property(\"createdAt\"); \r",
							"    pm.expect(jsonData.name).to.eql(\"Spring boot class\");\r",
							"    \r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n   \"name\": \"Spring boot class\",\r\n   \"data\": {\r\n      \"year\": 2024,\r\n      \"price\": 1999.99\r\n   }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://api.restful-api.dev/objects",
					"protocol": "https",
					"host": [
						"api",
						"restful-api",
						"dev"
					],
					"path": [
						"objects"
					]
				}
			},
			"response": []
		},
		{
			"name": "deletando objeto",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response has valid JSON structure\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    \r",
							"    pm.expect(jsonData).to.have.property(\"message\"); \r",
							"    pm.expect(jsonData.message).to.eql(\"Object with id = ff8081818feaa6c4018ff9c47d2e1557 has been deleted.\");\r",
							"    \r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://api.restful-api.dev/objects/ff8081818feaa6c4018ff9c47d2e1557",
					"protocol": "https",
					"host": [
						"api",
						"restful-api",
						"dev"
					],
					"path": [
						"objects",
						"ff8081818feaa6c4018ff9c47d2e1557"
					]
				}
			},
			"response": []
		},
		{
			"name": "get objetos",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://api.restful-api.dev/objects",
					"protocol": "https",
					"host": [
						"api",
						"restful-api",
						"dev"
					],
					"path": [
						"objects"
					]
				}
			},
			"response": []
		}
	]
}